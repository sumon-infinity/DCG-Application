name: Build and Release Flutter App

on:
  push:
    tags:
      - 'v*.*.*'  # Trigger on version tags like v1.0.0
  workflow_dispatch:  # Allow manual triggering
    inputs:
      version:
        description: 'Version tag (e.g., v1.0.0)'
        required: true
        default: 'v1.0.0'

jobs:
  build-apk:
    name: Build Android APK
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'
    
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.24.0'
        channel: 'stable'
    
    - name: Install dependencies
      run: flutter pub get
    
    - name: Build APK
      run: flutter build apk --release
    
    - name: Upload APK artifact
      uses: actions/upload-artifact@v4
      with:
        name: android-apk
        path: build/app/outputs/flutter-apk/app-release.apk

  build-web:
    name: Build Web
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.24.0'
        channel: 'stable'
    
    - name: Install dependencies
      run: flutter pub get
    
    - name: Build for web
      run: flutter build web --release
    
    - name: Create web archive
      run: |
        cd build/web
        tar -czf ../../dcg-web-build.tar.gz .
    
    - name: Upload web artifact
      uses: actions/upload-artifact@v4
      with:
        name: web-build
        path: dcg-web-build.tar.gz

  deploy-web:
    name: Deploy to GitHub Pages
    runs-on: ubuntu-latest
    needs: build-web
    
    permissions:
      contents: read
      pages: write
      id-token: write
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Download web artifact
      uses: actions/download-artifact@v4
      with:
        name: web-build
    
    - name: Extract web build
      run: |
        mkdir -p web-build
        tar -xzf dcg-web-build.tar.gz -C web-build
    
    - name: Setup Pages
      uses: actions/configure-pages@v4
    
    - name: Upload to Pages
      uses: actions/upload-pages-artifact@v3
      with:
        path: 'web-build'
    
    - name: Deploy to GitHub Pages
      uses: actions/deploy-pages@v4

  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: [build-apk, build-web]
    
    permissions:
      contents: write
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Download APK artifact
      uses: actions/download-artifact@v4
      with:
        name: android-apk
    
    - name: Download web artifact
      uses: actions/download-artifact@v4
      with:
        name: web-build
    
    - name: Get version from tag or input
      id: version
      run: |
        if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
          echo "version=${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
        else
          echo "version=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
        fi
    
    - name: Rename APK
      run: mv app-release.apk DCG-Application-${{ steps.version.outputs.version }}.apk
    
    - name: Rename web build
      run: mv dcg-web-build.tar.gz DCG-Application-web-${{ steps.version.outputs.version }}.tar.gz
    
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ steps.version.outputs.version }}
        name: DCG Application ${{ steps.version.outputs.version }}
        body: |
          ## DCG Application Release ${{ steps.version.outputs.version }}
          
          ### üì± Android
          - **APK**: Ready to install on Android devices
          
          ### üåê Web
          - **Live Demo**: https://sumon-infinity.github.io/DCG-Application/
          - **Web Build**: Download and host on your own server
          
          ### üìã Changes
          - Bug fixes and improvements
          - Updated dependencies
          
          ### üì• Installation
          
          **Android:**
          1. Download the APK file
          2. Enable "Install from unknown sources" in your Android settings
          3. Install the APK
          
          **Web:**
          1. Visit the live demo link above, or
          2. Download the web build and extract it to your web server
        files: |
          DCG-Application-${{ steps.version.outputs.version }}.apk
          DCG-Application-web-${{ steps.version.outputs.version }}.tar.gz
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
